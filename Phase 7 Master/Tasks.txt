✅ Week 1: React + Next.js Core (CSR) – "Notes App"
Day	Task
Day 1	Create Next.js app with app/ directory using npx create-next-app@latest
Create /dashboard page with dummy heading ✅
Day 2	Learn useState, useEffect hands-on
Build Add Note form with local state ✅
Day 3	Display notes using .map() in a list
Add Delete note functionality ✅
Day 4	Add /note/[id] dynamic route
Show selected note using URL param
Day 5	Add Edit Note functionality in /note/[id]
Use useEffect to prefill data
Day 6	Refactor: Create NoteCard, NoteForm components
Clean up CSS or add Tailwind
Day 7	Revision + Recap: Rebuild basic Note flow again in 1–2 hours

✅ Week 2: State Patterns + Tailwind + Custom Hooks – "Todo App"
Day	Task
Day 8	Setup new project or continue in same repo
Create task list with useState
Day 9	Add filters: All / Completed / Pending
Practice conditional rendering
Day 10	Style UI using Tailwind (buttons, layout, colors)
Day 11	Add localStorage sync (read/write) with useEffect
Day 12	Create a custom hook useTasks() to manage task logic
Day 13	Use useContext to share global theme or task count
Day 14	Revision Day: Rebuild just Task Add/Delete flow + try styling without Tailwind

✅ Week 3: API Calls, SSR/SSG, Deployment – "Blog App"
Day	Task
Day 15	Create /blogs page
Fetch blogs from JSONPlaceholder using getServerSideProps
Day 16	Show blog cards with title/summary
Day 17	Add /blogs/[id] dynamic route to show full blog content
Day 18	Add error & loading states, improve UI
Day 19	Try replacing getServerSideProps with getStaticProps
Day 20	Deploy the Blog app to Vercel and test live
Day 21	Review: Build a simple API fetch project again (Weather, Quotes, etc.)

✅ Week 4: Auth + Protected Routes – "Mini Dashboard App"
Day	Task
Day 22	Create login & register UI pages (no auth yet)
Day 23	Add form validation (basic, useState or libraries like react-hook-form)
Day 24	Setup protected /dashboard page (mock logic only: if loggedIn, show content)
Day 25	Optional: Add NextAuth.js for real login using GitHub/Google
Day 26	Create reusable components: <Button />, <Input />, <Modal />
Day 27	Polish UI and test all flows
Day 28	Final Recap: List out all concepts learned + rebuild login flow from scratch